[{"D:\\reactWeather\\weather-app\\src\\index.js":"1","D:\\reactWeather\\weather-app\\src\\App.js":"2","D:\\reactWeather\\weather-app\\src\\weatherInfo.js":"3"},{"size":219,"mtime":1672392755429,"results":"4","hashOfConfig":"5"},{"size":2794,"mtime":1672394404820,"results":"6","hashOfConfig":"5"},{"size":2432,"mtime":1672394542093,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"mo9q6a",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"D:\\reactWeather\\weather-app\\src\\index.js",[],["17","18"],"D:\\reactWeather\\weather-app\\src\\App.js",["19"],"import React, { Component } from 'react'\nimport './App.css';\nimport Clock from 'react-live-clock';\nimport WeatherInfo from './weatherInfo'\n\nclass App extends React.Component {\n  state = {\n    latitude: null,\n    longitude: null,\n    temp: null,\n    locationName: null,\n    country: null,\n    humidity: null,\n    visiblity: null,\n    windSpeed: null,\n    feelsLike: null,\n    maxTemp: null,\n    weatherName: null\n  }\n  componentDidMount() {\n    if(navigator.geolocation){\n      this.getPostions()\n    .then((position) => {\n      console.log(position.coords.latitude);\n      // this.setState({latitude: position.coords.latitude})\n      this.getWeather(position.coords.latitude,position.coords.longitude)\n    })\n    }\n  }\n  getPostions = () => {\n    return new Promise(function(resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  };\n  getWeather = async (latitude, longitude) => {\n    const api = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=c0d573b18729da9019711dcbacf8458d`\n    );\n    const data = await api.json();\n    console.log(data)\n    this.setState(\n      {\n        temp:Math.round(data.main.temp),\n        locationName: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        visiblity: data.visibility,\n        windSpeed: data.wind.speed,\n        feelsLike: data.main.feels_like,\n        maxTemp: data.main.temp_max,\n        weatherName: data.weather[0].main\n      }\n    )\n  }\n  render() {\n    return (\n      <React.Fragment>\n    \n      \n        <div className=\"col-8 d-flex justify-content-center py-5 m-auto\">\n          <div className=\"col-6 app-bg d-flex flex-wrap py-3\">\n            <div className=\"col-12\">\n              <h2 className=\"text-white m-0\">{(this.state.locationName)}</h2>\n              <p className=\"text-white\">{(this.state.country)}</p>\n            </div>\n            <div className=\"col-12 mt-auto d-flex\">\n              <div className=\"my-auto\">\n              <h2 className=\"text-white m-0 \">\n              <Clock format={'HH:mm:ss'} ticking={true} />\n              </h2>\n              <p className=\"text-white m-0\">\n              <Clock\n              date={''}\n              format={'dddd, MMMM DD, YYYY'} />\n              </p>\n              </div>\n              <div className=\"ml-auto\">\n              <h1 className=\"text-white\">{(this.state.temp)}°C</h1>\n              </div>\n            </div>\n          </div>\n          <WeatherInfo humidity={this.state.humidity} visiblity={this.state.visiblity} windSpeed={this.state.windSpeed} feelsLike={this.state.feelsLike} maxTemp={this.state.maxTemp} weatherName={this.state.weatherName} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","D:\\reactWeather\\weather-app\\src\\weatherInfo.js",["20"],"import React from 'react'\r\n\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\nconst defaults = {\r\n    icon: 'CLEAR_DAY',\r\n    color: 'white',\r\n    size: 100,\r\n    animate: true\r\n  };\r\nfunction WeatherInfo(props) {\r\n    var weatherIcon = null;\r\n    switch(props.weatherName){\r\n        case \"Haze\":\r\n        weatherIcon = 'CLOUDY';\r\n        break;\r\n        case \"Rain\":\r\n        weatherIcon = 'RAIN';\r\n        break;\r\n        case \"RAIN\":\r\n        weatherIcon = 'CLOUDY'\r\n        default:\r\n        weatherIcon = 'CLEAR_DAY'  \r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"col-4 side-bg text-center py-3\">\r\n                <ReactAnimatedWeather\r\n                    icon={weatherIcon}\r\n                    color={defaults.color}\r\n                    size={defaults.size}\r\n                    animate={defaults.animate}\r\n                />\r\n                <h2 className=\"text-white py-3\">{props.weatherName}</h2>\r\n                <div className=\"d-flex flex-wrap\">\r\n                    <div className=\"d-flex col-12 py-2\">\r\n                        <div className=\"text-white\"><strong>Humidity</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.humidity}%</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-2\">\r\n                        <div className=\"text-white\"><strong>Visiblity</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.visiblity} mi</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-2\">\r\n                        <div className=\"text-white\"><strong>Wind Speed</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.windSpeed} Km/h</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-2\">\r\n                        <div className=\"text-white\"><strong>Feels Like</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.feelsLike}°C</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-2\">\r\n                        <div className=\"text-white\"><strong>Max Temp</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.maxTemp}°C</div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default WeatherInfo;",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":1,"column":17,"nodeType":"27","messageId":"28","endLine":1,"endColumn":26},{"ruleId":"29","severity":1,"message":"30","line":21,"column":9,"nodeType":"31","messageId":"32","endLine":22,"endColumn":34},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation"]